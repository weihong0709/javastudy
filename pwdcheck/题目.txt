完成一个小游戏，通过帮助客户提升密码强度获得积分。
一、规则如下：
1、给定一个字符串类型的密码（单个密码不大于100字符）数组P（数组长度不大于100），计算出每个密码需要经过几步才能更改成强密码（根据规则4）并形成数组S（数组长度和P相等），改造1步消耗1分；改造后可以获得积分，用非负整数数组C表示，和S一一对应。对于某次改造i，改造赚取的积分Ci,消耗的分数为Si，净收益分数为Ci-Si,累计到自身总积分MS中，如果有多个解，需要全部给出。
2、对于某个密码的改造，自身MS必须不小于本次改造所花费的成本才可以进行。
3、对于外部输入的P,C,MS,N从给定的列表中选择最多N个密码进行改造，以最大化你的最终积分MS，并输出最大化MS，最大MS相同时，给出改造最少的密码个数，输出格式为"MS-修改的密码个数"。
4、密码强弱：
	密码P如果满足以下条件，则认为密码是强密码：
	a、至少6个字符，最多20个字符。
	b、它必须包含至少一个小写字母、至少一个大写字母和至少一个数字。
	c、它不能在一行中包含三个重复字符（"…aaa…"是弱字符，但"…aa…a…"是强密码，前提是满足其他条件）。	计算使P成为强密码所需的最小更改（任何一个字符的插入、删除或替换都视为一步更改）；如果P已经很强，
	则返回0。

二、输入输出
比如输入json串{"P":["123456","abcdEf"],"C":[3,2],"N":2,"MS":1}。最终打印"3-2"。

要求：
1、使用TDD开发
2、提供源码+单元测试用例
3、提供可以独立的exe，满足输入输出要求